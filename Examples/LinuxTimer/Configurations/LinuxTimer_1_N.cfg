// -------------------------------------------------------------------------------------------------------
// Main Application : A demonstration of the minimum default example showing LinuxTimer at 1 Hz.
//
// Source Code Reference : $MARTe2_Components_DIR/Source/Components/DataSources/LinuxTimer
// 
// See also: LinuxTimer_1_{1..N}.cfg for variations of other LinuxTimer behaviours.
//
// RUN Default: m2 LinuxTimer_1_1.cfg -s State1
//
// Expected output :
// 
// [Information - MARTeApp.cpp:131]: Application starting
// [Information - LoggerBroker.cpp:152]: Counter [0:0]:1
// [Information - LoggerBroker.cpp:152]: Time [0:0]:0
// [Information - LoggerBroker.cpp:152]: Counter [0:0]:2
// [Information - LoggerBroker.cpp:152]: Time [0:0]:2000000
// 
// -------------------------------------------------------------------------------------------------------
$TestApp = {
    Class = RealTimeApplication
	+Data = { 
        Class = ReferenceContainer
        DefaultDataSource = LoggerDataSource
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        } 
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource

        }  
    }
    +Functions = {
        Class = ReferenceContainer

        +Clock = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 1
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
//                    DataSource = DDB1
                    Type = uint32
                }
                Time = {
 //                   DataSource = DDB1
                    Type = uint32
                }
            }
        }
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {Clock}
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
